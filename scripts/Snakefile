from  pathlib import Path
from os.path import join as pjoin

############### COVID TWEETS ########################
############ raw data ##############
ROOT_DIR = "../data/covid"
raw_covid_files = [
    "covid_2020-01-21.tsv",
    "covid_2020-01-22.tsv",
    "covid_2020-01-23.tsv",
    "covid_2020-01-24.tsv"] # file of sentences

############ derived covid data #############
COVID_DERIVED_DIR = pjoin(ROOT_DIR, 'derived')
COVID_SENTENCES_DIR = pjoin(COVID_DERIVED_DIR, "sentences")
COVID_TX_SRL_DIR = pjoin(COVID_DERIVED_DIR, "txSRL")
COVID_CLEAN_SRL_DIR = pjoin(COVID_DERIVED_DIR, "txSRL", "clean")
COVID_NARRATIVE_SIMILARITY_DIR = pjoin(COVID_DERIVED_DIR, 'txSRL', "sentBert")

covid_sentences_file = os.path.join(COVID_SENTENCES_DIR, '{raw_file}.txt')
covid_tx_descriptions = os.path.join(COVID_TX_SRL_DIR, '{raw_file}.description')
covid_tx_descriptions_clean = os.path.join(COVID_CLEAN_SRL_DIR, '{raw_file}.description')

############# aggreate covid narrative #########
# check format_narrative
COVID_NARRATIVE_DIR = "/home/zhaowany/INCAS/incas-iu/data/derived/covid/txSRL/aggreated_narrative"
covid_time_ranges = ["2020-01-21_to_2020-01-23",
                     "2020-01-24_to_2020-01-24"]

covid_aggregate_narrative = os.path.join(COVID_NARRATIVE_DIR, "{time_range}")    

covid_tx_sentBert_embds= os.path.join(COVID_NARRATIVE_SIMILARITY_DIR, "{time_range}.embds")
covid_birch_result = os.path.join(COVID_NARRATIVE_DIR, "birch", "{time_range}.birch" )
covid_birch_narrative = os.path.join(COVID_NARRATIVE_DIR, "birch_narrative", "{time_range}.nar")
covid_narrative_gold  = os.path.join(COVID_NARRATIVE_DIR, 'birch_gold', "{time_range}.nar") 

covid_arguments_sum = pjoin(COVID_TX_SRL_DIR, "argument", "sum.csv") 
covid_birch_narr_gold_labels = pjoin(COVID_NARRATIVE_DIR, "birch_full_data", "sum_gold.csv")
covid_birch_arg_gold_list = pjoin(COVID_TX_SRL_DIR, "argument", "arg_gold_label.csv") 


rule all:
    input:
        expand(covid_tx_descriptions,  raw_file = raw_covid_files),
        expand(covid_tx_descriptions_clean,  raw_file = raw_covid_files),
        expand(covid_aggregate_narrative, time_range = covid_time_ranges),
        expand(covid_tx_sentBert_embds, time_range = covid_time_ranges),
#       expand(covid_birch_result, time_range = covid_time_ranges),
#       expand(covid_birch_narrative, time_range = covid_time_ranges),
#       expand(covid_narrative_gold , time_range = covid_time_ranges),
#       expand(covid_arguments_sum),
#       expand(covid_birch_narr_gold_labels),
#       expand(covid_birch_arg_gold_list),
#       expand(log_odd)
        


################# covid rules #################

rule get_txSRL_description_Covid:
    input:
        covid_sentences_file
    output:
        covid_tx_descriptions
    shell:
        "/home/zhaowany/anaconda3/envs/collective_narratives/bin/python tx-srl/run.py {input} {output}"


rule clean_txSRL_Covid:
    input:
        covid_tx_descriptions
    output:
        covid_tx_descriptions_clean
    shell:
        "/home/zhaowany/anaconda3/envs/collective_narratives/bin/python pb2va/format_txSRL.py {input} {output}"

rule aggregate_narrative_Covid:
    input:
        # raw_covid_files should include all the file need to be process
       expand(covid_tx_descriptions_clean, raw_file = raw_covid_files)  
    params:
        "{time_range}"
    output:
        covid_aggregate_narrative
    shell:
        "/home/zhaowany/anaconda3/envs/collective_narratives/bin/python process_narratives/aggregate_by_time_range.py {input} {params} {output}"
   

rule narrative_sentBert_embds_Covid:
    input:
        covid_aggregate_narrative
    output:
        covid_tx_sentBert_embds
    shell:
        "/home/zhaowany/anaconda3/envs/sentBert/bin/python senBert/get_sentBert_embds_4_narrs.py {input} {output}"


################# covid rules #################
#rule log_odd_w_narrative_Covid:
#    input:
#       covid_narrative_gold  


rule map_args_w_gold_label_Covid:
    input:
        covid_birch_narrative,
        covid_birch_arg_gold_list
    output:
        covid_narrative_gold 
    shell:
        "/home/zhaowany/anaconda3/envs/phase1b/bin/python process_argument/replace_arg_with_gold.py {input} {output}"


rule map_narrative_w_gold_label_Covid:
    input:
        covid_aggregate_narrative,
        covid_birch_narr_gold_labels
    output:
        covid_birch_narrative
    shell:
        "/home/zhaowany/anaconda3/envs/phase1b/bin/python format_narratives/replace_narr_with_gold.py {input} {output}"


rule birch_cluster_Covid:
    input:
        covid_tx_sentBert_embds,
        covid_aggregate_narrative
    output:
        covid_birch_result
    shell:
        "/home/zhaowany/anaconda3/envs/phase1b/bin/python birch/clustering.py {input} {output}"
    





